version = "3.8.2"

align {
  preset = none
  stripMargin = yes
}

assumeStandardLibraryStripMargin = yes

danglingParentheses {
  exclude = []
}

docstrings {
  forceBlankLineBefore = no
  oneline = keep
  style = SpaceAsterisk
  wrap = no
}

fileOverride {
  "glob:**/*.sbt" {
    rewrite.rules = []

    runner {
      # https://scalameta.org/scalafmt/docs/configuration.html#scala-dialects
      dialect = sbt1
    }
  }

  "glob:**/project/*.scala" {
    rewrite.rules = []

    runner {
      # https://scalameta.org/scalafmt/docs/configuration.html#scala-dialects
      dialect = Scala212
    }
  }
}

includeNoParensInSelectChains = yes

indent {
  caseSite = 5
  commaSiteRelativeToExtends = 8
  ctrlSite = 4
  defnSite = 2
  withSiteRelativeToExtends = 3
}

indentOperator {
  exemptScope = all
}

lineEndings = preserve

maxColumn = 100

newlines {
  alwaysBeforeElseAfterCurlyIf = yes
  avoidForSimpleOverflow = [slc, tooLong]
  avoidInResultType = yes
  beforeCurlyLambdaParams = multilineWithCaseOnly
  forceBeforeAssign = anyMember
  forceBeforeMultilineAssign = any
  implicitParamListModifierForce = [after]
  inInterpolation = avoid
  sometimesBeforeColonInMethodReturnType = no

  topLevelStatementBlankLines = [
    {
      blanks {
        beforeAll = -1,
        afterAll = -1,
        beforeEndMarker = -1
      }

      minBreaks = 0
    },
    {
      blanks {
        beforeAll = -1,
        before = 1,
        after = 1,
        afterAll = -1,
        beforeEndMarker = -1
      }

      minBreaks = 1
    }
  ]
}

project {
  excludeFilters = [
    ".metals"
  ]
}

rewrite {
  redundantBraces {
    ifElseExpressions = yes
  }

  rules = [
    AvoidInfix
    PreferCurlyFors
    RedundantBraces
    RedundantParens
    SortModifiers
  ]

  sortModifiers {
    order = [
      final
      sealed
      abstract
      override
      implicit
      private
      protected
      lazy
    ]
  }
}

rewriteTokens {
  "⇒" = "=>"
  "→" = "->"
  "←" = "<-"
}

runner {
  # https://scalameta.org/scalafmt/docs/configuration.html#scala-dialects
  dialect = scala213
}

spaces {
  inImportCurlyBraces = yes
}

trailingCommas = multiple

verticalMultiline {
  arityThreshold = 3
  atDefnSite = yes
  newlineAfterOpenParen = yes
}
